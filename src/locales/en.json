{
	"sidebar":{
		"titles":".NET Dev | Full-Stack | Fiber Optics Tech",
		"downloadButton":"Download Resume",
		"cv":"/CV_Diego_Jimenez_Mendez_EN.pdf",
		"skillsButton":"Skills",
		"skills": [
			{
			  "title": "Spanish",
			  "level": "Native",
			  "percent": 100
			},
			{
			  "title": "English",
			  "level": "Fluent",
			  "percent": 90
			},
			{
			  "title": "C#",
			  "level": "Very Adept",
			  "percent": 95
			},
			{
			  "title": "HTML/CSS/JS",
			  "level": "Very Adept",
			  "percent": 90
			},
			{
			  "title": "Python",
			  "level": "Skilled",
			  "percent": 75
			},
			{
			  "title": "Java",
			  "level": "Skilled",
			  "percent": 70
			}
		]
	},
	
    "about":{
        "title": "About Me",
		"paragraphs":[
			"Engineer in Computational Systems; Bilingual Software Developer and Fiber Optics Technician with experience in both software engineering and fieldwork. Skilled in building modern applications using C#, Python, Java, and Windows-based development with WPF, WinForms, .NET Core and .NET Framework, and current web technologies like React, Tailwind CSS, and Next.js. Specialized in software development in the Windows platform. Has fluency in Java, JavaFX, and Spring Boot, should need arise.",
			"Formal education covered database handling with MySQL, XAMPP and PHP; mainly specialized in PostgreSQL. Currently developing applications for server-hosting. Has also built websites using HTML, CSS, and modern JavaScript.",
			"Hands-on expertise in fiber optics installation, structured networking, and electronics automation."
		],
        "skills":[
            "Coding expertise in C#, Python, Java, and web technologies",
            "Modern front-end work with WPF, .NET Core 9.0, and Tailwind",
            "Fiber optics splicing, RJ45 crimping, structured networking",
            "Fieldwork in electronic installations and automation"
        ]
    },
	
	"experience": {
		"title": "Experience",
		"card1": {
			"title": "Full-Stack .NET Developer",
			"location": "OrchestraMC · Personal Project",
			"desc": "Built a multi-host Minecraft server utility using WPF, C#, .NET Core, and Java.",
			"bullets": [
				"Designed and built a multi-host server automation tool using C#, WPF, .NET Core 9.0, and Java. I currently maintain its code on GitHub using Git.",
				"Automated server setup with data extraction from Ngrok API, Playit.gg CLI, and Apify IPs.",
				"Developed a user-friendly interface with modular architecture, async/await asynchronous operation, LINQ, and RESTful management with JSON."
			]
	  	},
		"card2": {
			"title": "Fiber Optic Technician",
			"location": "Offilex · Jacarandas Ave., San Marcos, Estado de México",
			"desc": "Worked on telecommunications, security, and automation projects requiring technical precision and on-site problem solving.",
			"bullets": [
				"Installed and terminated fiber optic cables across residential and commercial routes.",
				"Mounted wireless antennae and GPS units on rooftops and vehicles with proper safety gear.",
				"Crimped and spliced UTP (RJ45) and copper cables to repair and reinforce networks."
			]
		},
		"card3": {
			"title": "Bachelor’s Degree",
			"location": "Universidad Privada del Estado de México (UPEM)",
			"desc": "Graduated in Computational Systems Engineering with top honors. Awarded official recognition and plaque for academic excellence.",
			"bullets": [
				"Recognized for academic excellence with official plaque and university-wide honors."
			]
	  }
	},
	
	"projects": {
		"project1": {
			"sections": [
				{
					"image": "/orchestra_front.png",
					"image2": "/orchestra_front2.png",
					"header": "OrchestraMC — Automated Minecraft Server Orchestration",
					"paragraphs": [
						"OrchestraMC is a C# WPF application that automates the entire Minecraft modded server deployment pipeline, from Forge installation to tunnel provisioning and runtime management.",
						"It integrates with multiple third-party APIs (Ngrok, Playit.gg) and parses Maven repositories to dynamically resolve and install correct Forge builds based on user-selected Minecraft versions.",
						"The tool handles file I/O operations across modpack instances, automatically configuring server.properties, managing Java process lifecycle, and extracting server addresses from tunnel service outputs in real-time."
					]
				},
				{
					"image": "/orchestra_code2.png",
					"image2": "/orchestra_code.png",
					"header": "Architecture: WPF with Asynchronous Service Integration",
					"paragraphs": [
						"Built on .NET with WPF for UI, the application uses async/await patterns for non-blocking API calls and process management, preventing UI freezes during long-running operations like Forge installation.",
						"The backend orchestrates multi-step workflows: validating modpack directories, scraping Forge version data from Maven XML, downloading and executing installers, spawning child processes for servers and tunnels, and parsing stdout streams for connection endpoints.",
						"Uses JSON deserialization for configuration persistence, regex pattern matching for address extraction, and conditional state machines to determine whether to install, start, restart, or stop services based on current system state."
					]
				},
				{
					"image": "/orchestra_git.png",
					"image2": "/orchestra_git2.png",
					"header": "Open Source with Integrated Debug Logging",
					"paragraphs": [
						"The repository includes a dedicated debug branch with built-in output logging for issue tracking and user feedback collection.",
						"Follows proper version control with tagged releases (v1.0.0-alpha, v1.0.1-alpha), includes MIT licensing, and maintains separation between stable and experimental builds.",
						"The codebase demonstrates production practices including error handling for modified tunnel configurations, user-facing debug output for troubleshooting, and modular separation of concerns across installation, server management, and networking layers."
					]
				}
			],
			"button": "View on GitHub",
			"link": "https://github.com/MortalSecond/OrchestraMC"
		}
	},
	
	"contact":{
		"title": "Get In Touch",
		"button": "Contact Me"
	},
	
	"buttons":{
		"viewGithub":"View on GitHub →"
	}
}